import json
from pathlib import Path

path = Path(r"e:/Projects/NBCOT-Clone/src/data/practice-tests/otr-baseline/questions.json")
updates = {
  9: "**Correct Answer: Provide video feedback as a method of reinforcing errorless learning during meal preparation.**\n\n**Why this is right:** For adults recovering from early-stage dementia (the scenario implied by repeated cueing needs), video feedback supports errorless learning by letting the client watch themselves performing the correct sequence. It taps procedural memory and has stronger carryover than verbal reminders alone.\n\n**Clinical reasoning:** NBCOT loves strategies that minimize trial-and-error mistakes for clients with memory deficits. Video modeling, when replayed immediately, reinforces correct performance and reduces frustration.\n\n**Why the other options miss:**\n- *Have the client wear earplugs and face away from distractions:* Removing auditory input can increase disorientation and safety risk in the kitchen.\n- *Teach the client to use a timer to maintain attention for repeated tasks:* Timers help with pacing, not skill carryover; they do not teach the correct sequence.\n\n**Book anchor:** AOTA Cognitive Rehabilitation Guidelines (Giles and Clark-Wilson) cite video feedback as an evidence-supported strategy for instrumental ADL retraining in memory impairment.",
  10: "**Correct Answer: Provide a visual recipe card with step-by-step photographs.**\n\n**Why this is right:** Visual supports compensate for working-memory deficits. A photo-based sequencing card guides the client through each meal-prep step, promoting independence and reducing verbal cueing.\n\n**Clinical reasoning:** Task analysis with visual prompts is foundational in OT cognitive retraining. NBCOT expects you to choose the client-centered, low-tech assist that promotes autonomy.\n\n**Why alternatives fall short:**\n- *Rely on verbal prompts:* High cue burden on the therapist or caregiver and limited carryover.\n- *Simplify into fewer steps without visuals:* The client still lacks external memory aids and may forget the sequence.\n\n**Book anchor:** The Toglia Cognitive Rehabilitation Model recommends multi-sensory cueing (visual and tactile) to support functional task sequencing for individuals with executive dysfunction.",
  11: "**Correct Answer: Use forward chaining to teach the first steps, then fade cues gradually.**\n\n**Why this is right:** Forward chaining lets the client master the opening steps before adding complexity. It fits the scenario of a client who recalls the beginning of the task but loses track mid-sequence.\n\n**NBCOT angle:** Demonstrates knowledge of learning theory (behavioral chaining) applied to occupation-based goals.\n\n**Why other options miss:**\n- *Backward chaining* is useful when only the final step succeeds, but the prompt highlights trouble sustaining the sequence, so forward chaining fits better.\n- *Total physical assistance* undermines independence and reduces learning opportunities.\n\n**Reference:** Pedretti and Early describe chaining and cue fading as core ADL retraining strategies for cognitive impairments.",
  12: "**Correct Answer: Have the client wear earplugs and face away from distractions when preparing a meal.**\n\n**Why this is right:** The vignette states the client is derailed by the TV and conversations, leading to safety lapses. Environmental simplification is the quickest way to reduce errors and aligns with the cognitive compensation hierarchy; modify context before layering new skills.\n\n**Clinical reasoning:** For attention deficits after TBI or CVA, stimulus control (limiting auditory and visual clutter) reduces extraneous cognitive load so the client can focus on the task.\n\n**Why other options miss:**\n- *Video feedback* is useful later but does not remove the immediate distractions.\n- *Timer use* helps with pacing but does not prevent off-task behavior.\n\n**Reference:** Katz et al., Cognition, Occupation, and Participation Across the Lifespan, highlight distraction management as a first-line intervention for impaired sustained attention."
}

data = json.loads(path.read_text())
for item in data:
    if item['order'] in updates:
        item['content'] = updates[item['order']]

path.write_text(json.dumps(data, indent=2))
